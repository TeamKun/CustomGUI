import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.+', changing: true
        classpath "org.jetbrains.kotlin:kotlin-serialization:1.5.21"
    }
}

apply plugin: "kotlin"
apply plugin: 'net.minecraftforge.gradle'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: '20210309-1.16.5'
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                customgui {
                    source sourceSets.main
                }
            }
        }
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

repositories {
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.0'
    embed group: "org.jetbrains.kotlin", name: "kotlin-stdlib", version: "1.5.21"
    embed group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8", version: "1.5.21"
    embed group: "org.jetbrains.kotlin", name: "kotlin-reflect", version: "1.5.21"

    embed "org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.0"
    embed 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'

    embed "io.ktor:ktor-client-core:1.6.1"
    embed "io.ktor:ktor-client-okhttp:1.6.1"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter(
                ReplaceTokens,
                tokens: [
                        'version': project.version,
                ]
        )
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "customgui",
                "Specification-Vendor"    : "kotx__, kun_lab",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : "kotx__, kun_lab",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    archiveName("${parent.project.name}-mod-${parent.project.version}.jar")

    from configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
}

task shadow {
    group("kotx_build")
    dependsOn(jar)
    doLast {
        copy {
            from jar
            into new File("${projectDir}/../output")
        }
    }
}

jar.finalizedBy('reobfJar')